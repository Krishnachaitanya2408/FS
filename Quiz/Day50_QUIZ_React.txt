Question 1
Complete
Mark 1.00 out of 1.00
Flag question
Question text
What will happen when you call a Hook like useEffect inside a conditional block in a React functional component?

function MyComponent({ flag }) {
  if (flag) {
    useEffect(() => {
      console.log("Effect ran");
    }, []);
  }
  return <div>Hello</div>;
}
Question 1Answer

a.
React will throw an error because Hooks must be called unconditionally.


b.
React will log a warning but proceed without errors.


c.
The effect will be skipped silently when flag is false.


d.
The effect will run only when flag is true.

Question 2
Complete
Mark 1.00 out of 1.00
Flag question
Question text
const Child = React.memo(({ obj }) => {
  console.log("Rendered");
  return <div>{obj.count}</div>;
});
function App() {
function App() {
  const [count, setCount] = React.useState(0);
  const obj = { count };
  return (
  return (
    <>
      <Child obj={obj} />
      <button onClick={() => setCount(count + 1)}>Increment</button>
    </>
  );
}
What is printed to the console each time the button is clicked?

Question 2Answer

a.
React.memo triggers re-render due to console.log side-effect.


b.
React.memo uses deep comparison, and deep objects always differ.


c.
A new object reference is created on each render, causing re-render.


d.
React.memo doesn't support object props.

Question 3
Complete
Mark 1.00 out of 1.00
Flag question
Question text
function ErrorFallback() {
  return <div>Error occurred</div>;
}
function Component() {
function Component() {
  throw new Error("Something went wrong");
}
function App() {
function App() {
  return (
    <React.Suspense fallback={<div>Loading...</div>}>
      <Component />
    </React.Suspense>
  );
}
What does React.Suspense catch and handle internally?

Question 3Answer

a.
Failed fetch requests by default


b.
Runtime JavaScript errors in <Component />


c.
Promises thrown during rendering, such as from React.lazy


d.
Errors in useEffect or asynchronous handlers

Question 4
Complete
Mark 0.00 out of 1.00
Flag question
Question text
What is logged when the button is clicked the first time?

function App() {
  const [a, setA] = React.useState(0);
  const [b, setB] = React.useState(0);

  function handleClick() {
    setA(a + 1);
    setB(b + 1);
    console.log(a, b);
  }

  return <button onClick={handleClick}>Click</button>;
}

Question 4Answer

a.
1 1


b.
The updated values of a and b


c.
React throws an error


d.
0 0

Question 5
Complete
Mark 0.00 out of 1.00
Flag question
Question text
Which value will be printed to the console when the following componentâ€™s button is clicked once?

function App() {
  const [count, setCount] = React.useState(0);

  function handleClick() {
    setTimeout(() => {
      console.log("Count is:", count);
    }, 1000);
    setCount(count + 1);
  }

  return <button onClick={handleClick}>Click</button>;
}

Question 5Answer

a.
Count is: undefined

b.
Count is: 0

c.
Count is: NaN

d.
Count is: 1
Finish